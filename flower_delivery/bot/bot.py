import logging
from telegram import Bot, InputFile
from telegram.constants import ParseMode


# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
TELEGRAM_BOT_TOKEN = ''     # –£–°–¢–û–ù–û–í–ò–¢–¨ TOKEN
CHAT_ID = ''                # –£–°–¢–û–ù–û–í–ò–¢–¨ CHAT_ID

bot = Bot(token=TELEGRAM_BOT_TOKEN)
# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


async def send_order_notification(order):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ –≤ Telegram.
    """
    try:
        # –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞
        total_price = sum(product.price for product in order.products.all())
        products_text = "\n".join([f"‚Ä¢ {product.name} - {product.price} —Ä—É–±." for product in order.products.all()])

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        message = (
            f"üì¶ <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!</b>\n\n"
            f"üè† <b>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:</b> {order.delivery_address}\n"
            f"üí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {order.comment or '–ù–µ—Ç'}\n"
            f"üõí <b>–¢–æ–≤–∞—Ä—ã:</b>\n{products_text}\n"
            f"üí∞ <b>–ò—Ç–æ–≥–æ:</b> {total_price} —Ä—É–±."
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await bot.send_message(chat_id=CHAT_ID, text=message, parse_mode=ParseMode.HTML)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        for product in order.products.all():
            if product.image:
                await bot.send_photo(chat_id=CHAT_ID, photo=InputFile(product.image.path))

        logger.info("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ.")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
